{"version":3,"file":"usersController.js","sourceRoot":"","sources":["../../../src/Routes/usersController.ts"],"names":[],"mappings":"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","sourcesContent":["import { compare, hash } from 'bcrypt';\nimport Database from 'better-sqlite3';\nimport type { Request, Response } from 'express';\n\nimport { sendMail } from '../Utils/email.utils';\nimport { generateTokenUser, generateValidateToken, validateToken } from '../Utils/jwt.utils';\n\nconst USERNAME_REGEX = /^[A-Za-z0-9--_]/;\nconst EMAIL_REGEX = /^[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*@[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*$/;\nconst PASSWORD_REGEX = /(?=.*\\d)(?=.*[a-zA-Z])(?=).{8,1048}/;\n\ninterface User {\n  avatar: string;\n  dateCreated: string;\n  email: string;\n  id: number;\n  password: string;\n  username: string;\n}\ninterface Body {\n  methode?: string;\n  password?: string;\n  username?: string;\n  email: string;\n}\n\nexport function register(_req: Request, res: Response): void {\n  res.render('pages/register', { register: false, user: undefined });\n}\n\nexport function login(_req: Request, res: Response): void {\n  res.render('pages/login', { register: true, user: undefined });\n}\n\nexport function user(req: Request, res: Response): void {\n  const { cookies }: { cookies: Record<string, string> } = req;\n\n  let userDb: User | undefined;\n  if (cookies['__SESSION_TOKEN']) {\n    const token = validateToken(cookies['__SESSION_TOKEN']);\n    if (token?.exp && token.exp > Math.floor(Date.now() / 1000)) {\n        userDb = new Database('Database/users.db')\n        .prepare(`SELECT id, username, email, dateCreated, avatar FROM Users WHERE id = ?`)\n        .get(token['userId']) as User | undefined;\n    }\n  }\n\n  if (!user) return res.render('pages/register', { register: false, user: undefined });\n  res.render('pages/user', { user: userDb });\n}\n\nexport function delete_(_req: Request, res: Response): void {\n  res.render('pages/delete', { succes: undefined, user: undefined });\n}\n\nexport function deleteConfirm(req: Request, res: Response): Response | void {\n  const { token } = req.params;\n  if (!token) return res.status(404).json({ Error: 'Missing token' });\n  const checkToken = validateToken(token);\n\n  if (!checkToken?.exp) return res.status(404).json({ Error: 'Validate URL not found' });\n  if (checkToken.exp < Math.floor(Date.now() / 1000)) return res.status(400).json({ Error: 'Validate URL expired' });\n\n  const db = new Database('Database/users.db');\n  const user = db.prepare(`SELECT username FROM Users WHERE id = ?`).get(checkToken['userId']) as User | undefined;\n\n  if (!user) return res.status(404).json({ Error: 'User not found' });\n\n  switch (checkToken['type']) {\n    case 'delete':\n      db.prepare('DELETE FROM Users WHERE username = ?').run(user.username);\n      return res.status(200).clearCookie('__SESSION_TOKEN').redirect('/');\n  }\n}\n\nexport function validate(req: Request, res: Response): Response | void {\n  const { email, methode, password }: Body = req.body;\n\n  if (!email || !password) return res.status(400).json({ Error: 'Missing parameters' });\n\n  const user = new Database('Database/users.db')\n    .prepare(`SELECT username, id, email, password FROM Users WHERE email = ?`)\n    .get(email) as User | undefined;\n\n  if (!user) return res.status(404).json({ Error: 'User not found' });\n\n  compare(password, user.password, (_err, resBcrypt) => {\n    if (!resBcrypt) res.status(403).json({ Error: 'Invalid Password' });\n    else {\n      switch (methode) {\n        case 'delete':\n          sendMail({\n            email: user.email,\n            htmlPart: `\n            <center>\n                <a href=\"http://localhost/users/delete/${generateValidateToken(\n                  user,\n                  'delete'\n                )}\" target=\"_blank\"\">Confirm account deletion</a>\n            </center>\n            `,\n            subject: 'Nowlid - Confirm account deletion',\n            textPart: 'Nowlid - Confirm account deletion'\n          })\n            .then(() => {\n              return res.status(200).render('pages/delete', { data: undefined, succes: true });\n            })\n            .catch(() => {\n              return res.status(200).render('pages/delete', { data: undefined, succes: true });\n            });\n          break;\n      }\n    }\n  });\n}\n\nexport function createAccount(req: Request, res: Response): Response | void {\n  const { email, password, username }: Body = req.body;\n\n  if (!username || !email || !password) return res.status(400).json({ Error: 'Missing parameter' });\n  if (username.length <= 2 || username.length >= 28)\n    return res.status(400).json({ Error: 'Wrong username/password (must be length 2 - 28)' });\n  if (!USERNAME_REGEX.test(username.trim()))\n    return res.status(400).json({ Error: 'Wrong username (any special caracter)' });\n  if (!PASSWORD_REGEX.test(password)) return res.status(400).json({ Error: 'Wrong password' });\n  if (!EMAIL_REGEX.test(email)) return res.status(400).json({ Error: 'Wrong email' });\n\n  const db = new Database('Database/users.db');\n\n  if (\n    db.prepare('SELECT 1 FROM Users WHERE email = ? LIMIT 1').pluck().get(email) ||\n    db.prepare('SELECT 1 FROM Users WHERE username = ? LIMIT 1').pluck().get(username.trim())\n  )\n    return res.status(409).json({ Error: 'User already exist' });\n\n  hash(password, 5, (_err, bcryptedPassword) => {\n    db.prepare('INSERT INTO Users VALUES (?, ?, ?, ?, ?, ?)').run(\n      null,\n      email,\n      username.trim(),\n      bcryptedPassword,\n      'null',\n      Date.now()\n    );\n    return res.status(201).redirect('/');\n  });\n}\n\nexport function connectAccount(req: Request, res: Response): Response | void {\n  const { email, password }: Body = req.body;\n\n  if (!email || !password) return res.status(400).json({ Error: 'Missing parameters' });\n  const user = new Database('Database/users.db')\n    .prepare(`SELECT id, password FROM Users WHERE email = ?`)\n    .get(email) as User | undefined;\n\n  if (!user) return res.status(404).json({ Error: 'User not found' });\n\n  compare(password, user.password, (_err, resBcrypt): Response | void => {\n    if (!resBcrypt) return res.status(403).json({ Error: 'Invalid Password' });\n\n    const token = generateTokenUser(user);\n    res.cookie('__SESSION_TOKEN', token, { httpOnly: false, maxAge: 10 * 60 * 1000, sameSite: 'lax', secure: true });\n\n    res.status(201).redirect('/');\n  });\n}\n\nexport function logoutAccount(_req: Request, res: Response): void {\n  res.status(200).clearCookie('__SESSION_TOKEN').redirect('/');\n}\n"]}