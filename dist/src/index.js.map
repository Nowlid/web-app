{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oEAAsC;AACtC,6CAA+C;AAC/C,kEAAyC;AACzC,+CAAiC;AACjC,sDAA8B;AAE9B,uCAAsC;AACtC,iDAAkD;AAElD,MAAM,CAAC,MAAM,EAAE,CAAC;AAChB,IAAI,wBAAQ,CAAC,mBAAmB,CAAC;KAC9B,OAAO,CACN,iJAAiJ,CAClJ;KACA,GAAG,EAAE,CAAC;AACT,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAEtB,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE;IAClB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,IAAA,wBAAU,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC,GAAG,CAAC,GAAG,CAAC,IAAA,kBAAI,GAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AACpC,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,GAAE,CAAC,CAAC;AAExB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAC7B,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAE9B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACxB,MAAM,EAAE,OAAO,EAAE,GAAwC,GAAG,CAAC;IAC7D,IAAI,IAAI,CAAC;IACT,IAAI,OAAO,CAAC,iBAAiB,CAAC,EAAE;QAC9B,MAAM,KAAK,GAAG,IAAA,yBAAa,EAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACxD,IAAI,KAAK,EAAE,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE;YAC3D,IAAI,GAAG,IAAI,wBAAQ,CAAC,mBAAmB,CAAC;iBACrC,OAAO,CAAC,yEAAyE,CAAC;iBAClF,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;SACzB;KACF;IACD,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAS,CAAC,CAAC","sourcesContent":["import Database from 'better-sqlite3';\nimport { json, urlencoded } from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport * as dotenv from 'dotenv';\nimport express from 'express';\n\nimport { userRoute } from './routers';\nimport { validateToken } from './Utils/jwt.utils';\n\ndotenv.config();\nnew Database('Database/users.db')\n  .prepare(\n    `CREATE TABLE IF NOT EXISTS Users(id INTEGER PRIMARY KEY AUTOINCREMENT, email TEXT, username TEXT, password TEXT, avatar TEXT, dateCreated TEXT)`\n  )\n  .run();\nconst app = express();\n\napp.listen(80, () => {\n  console.log('- Serveur in listen !');\n});\n\napp.use(urlencoded({ extended: true }));\napp.use(json());\napp.use(express.static('./public'));\napp.use(cookieParser());\n\napp.set('views', './views/');\napp.set('view engine', 'ejs');\n\napp.get('/', (req, res) => {\n  const { cookies }: { cookies: Record<string, string> } = req;\n  let user;\n  if (cookies['__SESSION_TOKEN']) {\n    const token = validateToken(cookies['__SESSION_TOKEN']);\n    if (token?.exp && token.exp > Math.floor(Date.now() / 1000)) {\n      user = new Database('Database/users.db')\n        .prepare(`SELECT id, username, email, dateCreated, avatar FROM Users WHERE id = ?`)\n        .get(token['userId']);\n    }\n  }\n  res.render('pages/home', { users: user });\n});\n\napp.use('/users', userRoute);\n"]}